[tox]
isolated_build = true
envlist = py39, py310, py311, format, lint, build

[gh-actions]
python =
    3.11: py311, format, lint, build
    3.10: py310
    3.9: py39

[flake8]
max-line-length = 79
max-complexity = 18
ignore = E203, E266, W503
docstring-convention = google
per-file-ignores = __init__.py:F401
exclude = .git,
    __pycache__,
    setup.py,
    build,
    dist,
    docs,
    releases,
    .venv,
    .tox,
    .mypy_cache,
    .pytest_cache,
    .vscode,
    .github,
    # By default test code will be linted.
    # tests

[coverage:run]
# uncomment the following to omit files during running
#omit =
;concurrency = multiprocessing,thread

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    def main

[testenv]
skip_install = true
allowlist_externals =
    poetry
passenv = *
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS = ignore
commands_pre =
    poetry install --with dev,test
commands =
    poetry run pytest \
        --cov=softpack_core \
        --cov-branch \
        --cov-report=xml \
        --cov-report=term-missing \
        tests

[testenv:format]
skip_install = true
allowlist_externals =
    poetry
    autoflake
    isort
    black
commands =
    autoflake \
        --in-place \
        --recursive \
        --remove-unused-variables \
        --remove-all-unused-imports \
        softpack_core tests
    isort softpack_core tests
    black softpack_core tests

[testenv:lint]
skip_install = true
allowlist_externals =
    poetry
    flake8
    mypy
commands =
    flake8 softpack_core
    flake8 tests --ignore=D101,D102,D103,D107
    mypy softpack_core

[testenv:build]
skip_install = true
allowlist_externals =
    poetry
    mkdocs
    twine
commands_pre =
    poetry install --with dev,doc
commands =
    poetry build
    mkdocs build
    twine check dist/*
